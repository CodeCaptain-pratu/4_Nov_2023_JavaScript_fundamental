QUESTION:Discuss the precedence and associativity of operators in JavaScript. Why is understanding these
concepts important?
ANSWER:
1) In JavaScript, operators have a specific precedence and associativity, which determines the order in which operations are performed when multiple operators are used in an expression. Understanding these concepts is important because it helps developers write correct and efficient code.

2) Precedence refers to the order in which operators are used when multiple operators are present in an expression.

3) JavaScript follows a standard order of precedence, with some operators having higher precedence than others. For example, the multiplication operator (*) has higher precedence than the addition operator (+).

4) Associativity refers to the order in which operators are applied when multiple instances of the same operator are present in an expression. JavaScript follows a left-to-right associativity, meaning that operators are applied
from left to right.

5) Understanding the precedence and associativity of operators is important because it helps developers avoid common pitfalls such as unexpected results or syntax errors. For example, consider the expression `2 + 3 * 4`.

6) Without understanding the precedence of operators, a developer might expect the result to b `10`, but the actual result is `14` because the multiplication operator (*) has higher precedence than the addition operator (+).

7) In addition, understanding the precedence and associativity of operators is important for writing efficient code.
For example, consider the expression `a + b + c`. Without understanding the associativity of the operator (+), a developer might write the expression as `(a + b) + c`, which can
result in unnecessary temporary variables being created. By understanding the left-to-right associativity
of the operator (+), a developer can write the expression as `a + b + c`, which is more efficient and easier to read.

In summary, understanding the precedence and associativity of operators in JavaScript is important for writing
correct and efficient code. It helps developers avoid common pitfalls and write code that is easy to read and
maintain.
